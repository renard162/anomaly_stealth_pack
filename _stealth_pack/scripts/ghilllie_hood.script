local ghood = nil
local g_flag = false

local function check_ghil()
	local outfit = db.actor:item_in_slot(7)
	g_flag = outfit and (outfit:section() == "ghillie_outfit")
end

local function is_nv_active()
	return item_device.is_nv_active()
end

local function is_hood_equiped()
	return g_flag and (ghood ~= nil)
end

local function init_mask()
	local hud = get_hud()
	local cs = hud:GetCustomStatic("indicator_drink")
	if (cs == nil) then
		hud:AddCustomStatic("indicator_drink", true)
		local xml = CScriptXmlInit()
		xml:ParseFile("ui_ghillie_hood.xml")
		cs = hud:GetCustomStatic("indicator_drink")
		local w = cs:wnd()
		local pos = w:GetWndPos()
		if pos.x ~= 0 then
			pos.x = 0
			pos.y = 0
			w:SetWndPos(pos)
		end
		ghood = xml:InitStatic("ghood", w )
		ghood:Show(false)
	end
end

function mask_on_load()
	init_mask()
	local out = db.actor:item_in_slot(7)
	if out and (out:section() == "ghillie_outfit") then
		ghood:Show(true)
	else
		ghood:Show(false)
	end
	check_ghil()
end

function on_option_change()
	check_ghil()
	if is_hood_equiped() then
		ghood:Show(true)
	end
	if ghood ~= nil then
		ghood:Show(false)
	end
end

function mask_equip(ghil)
	if ghil and (ghil:section() == "ghillie_outfit") and (ghood ~= nil) and (not is_nv_active()) then
		ghood:Show(true)
	end
	check_ghil()
end

function mask_unequip(ghil)
	if ghil and (ghil:section() == "ghillie_outfit") and (ghood ~= nil) then
		ghood:Show(false)
	end
	check_ghil()
end

function ghood_show()
	if is_hood_equiped() and (not is_nv_active()) then
		ghood:Show(true)
	end
end

function ghood_hide()
	if ghood then
		ghood:Show(false)
	end
end

function on_game_start()
	RegisterScriptCallback("actor_item_to_ruck", mask_unequip)
	RegisterScriptCallback("actor_on_item_drop", mask_unequip)
	RegisterScriptCallback("actor_item_to_slot", mask_equip)
	RegisterScriptCallback("on_option_change", on_option_change)
	RegisterScriptCallback("actor_on_first_update", mask_on_load)
end
